{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@glowingblue/flarum-move-posts/webpack/bootstrap","webpack://@glowingblue/flarum-move-posts/webpack/runtime/compat get default export","webpack://@glowingblue/flarum-move-posts/webpack/runtime/define property getters","webpack://@glowingblue/flarum-move-posts/webpack/runtime/hasOwnProperty shorthand","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['common/extend']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['forum/app']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['common/components/Button']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['common/components/Badge']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['forum/components/Post']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['forum/utils/PostControls']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['common/Model']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@glowingblue/flarum-move-posts/./src/forum/states/DiscussionPageState.ts","webpack://@glowingblue/flarum-move-posts/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@glowingblue/flarum-move-posts/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['uikit/forum/DiscussionSearch']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['forum/states/GlobalSearchState']\"","webpack://@glowingblue/flarum-move-posts/./src/forum/components/MovePostsModal.tsx","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['forum/components/EventPost']\"","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['common/components/Link']\"","webpack://@glowingblue/flarum-move-posts/./src/forum/components/PostMovedPost.tsx","webpack://@glowingblue/flarum-move-posts/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@glowingblue/flarum-move-posts/./src/forum/components/PostMovedNotification.tsx","webpack://@glowingblue/flarum-move-posts/./src/forum/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Badge'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/PostControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import type StreamType from 'mithril/stream';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default class DiscussionPageState {\n  public selectedPostsToMove: StreamType;\n\n  constructor() {\n    this.selectedPostsToMove = Stream([]);\n  }\n\n  push(postId: number): void {\n    this.selectedPostsToMove([...this.selectedPostsToMove(), postId]);\n  }\n\n  remove(postId: number): void {\n    this.selectedPostsToMove(this.selectedPostsToMove().filter((id: number) => id !== postId));\n  }\n\n  has(postId: number): boolean {\n    return this.selectedPostsToMove().includes(postId);\n  }\n}\n","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['uikit/forum/DiscussionSearch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/GlobalSearchState'];","import app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport Modal from 'flarum/common/components/Modal';\nimport Switch from 'flarum/common/components/Switch';\nimport DiscussionSearch from 'flarum/uikit/forum/DiscussionSearch';\nimport { ComponentAttrs } from 'flarum/common/Component';\nimport type Discussion from 'flarum/common/models/Discussion';\nimport GlobalSearchState from 'flarum/forum/states/GlobalSearchState';\n\nexport interface MovePostsModalAttrs extends ComponentAttrs {\n  discussion: Discussion;\n  postIds: number[];\n}\n\nexport default class MovePostsModal<T extends MovePostsModalAttrs> extends Modal<T> {\n  isLoading: string | boolean = false;\n  newDiscussion: boolean = false;\n  newDiscussionTitle: string = '';\n  targetDiscussionId: number | null = null;\n  search = new GlobalSearchState();\n\n  className() {\n    return 'MovePostsModal';\n  }\n\n  title() {\n    return app.translator.trans('sycho-move-posts.forum.modal.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <form className=\"Form\" onsubmit={this.onsubmit.bind(this)}>\n          <div className=\"Form-group\">\n            <label>{app.translator.trans('sycho-move-posts.forum.modal.selected_posts', { count: this.attrs.postIds.length })}</label>\n            <input className=\"FormControl\" readonly value={this.attrs.postIds.join(', ')} />\n          </div>\n          <div className=\"Form-group\">\n            <Switch state={this.newDiscussion} onchange={() => (this.newDiscussion = !this.newDiscussion)}>\n              {app.translator.trans('sycho-move-posts.forum.modal.new_discussion')}\n            </Switch>\n          </div>\n          {this.newDiscussion ? (\n            <div className=\"Form-group\">\n              <label for=\"discussion_name\">{app.translator.trans('sycho-move-posts.forum.modal.discussion_name')}</label>\n              <p className=\"helptext\">{app.translator.trans('sycho-move-posts.forum.modal.discussion_help')}</p>\n              <input id=\"discussion_name\" className=\"FormControl\" required={true} oninput={(e: any) => (this.newDiscussionTitle = e.target.value)} />\n            </div>\n          ) : (\n            <div className=\"Form-group\">\n              <label for=\"destination\">{app.translator.trans('sycho-move-posts.forum.modal.destination')}</label>\n              {/*<input\n                id=\"destination\"\n                className=\"FormControl\"\n                type=\"number\"\n                required={true}\n                onchange={(e: any) => (this.targetDiscussionId = e.target!.value)}\n              />*/}\n              <DiscussionSearch\n                state={this.search}\n                ignore={this.attrs.discussion.id()}\n                onSelect={(discussion: Discussion) => (this.targetDiscussionId = discussion.id())}\n              />\n            </div>\n          )}\n          <div className=\"Form-group Form-controls\">\n            <Button\n              className=\"Button Button--primary\"\n              type=\"submit\"\n              loading={this.isLoading === 'submit'}\n              disabled={this.isLoading === 'check' || (!this.targetDiscussionId && !this.newDiscussionTitle)}\n            >\n              {app.translator.trans('sycho-move-posts.forum.modal.submit')}\n            </Button>\n            <Button\n              className=\"Button\"\n              onclick={this.emulate.bind(this)}\n              loading={this.isLoading === 'check'}\n              disabled={this.isLoading === 'submit' || (!this.targetDiscussionId && !this.newDiscussionTitle)}\n            >\n              {app.translator.trans('sycho-move-posts.forum.modal.check')}\n            </Button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  data() {\n    const data: Record<string, unknown> = {\n      sourceDiscussionId: this.attrs.discussion.id(),\n      postIds: this.attrs.postIds,\n    };\n\n    if (this.newDiscussion) {\n      data.newDiscussion = true;\n      data.newDiscussionTitle = this.newDiscussionTitle;\n    } else {\n      data.targetDiscussionId = this.targetDiscussionId;\n    }\n\n    return data;\n  }\n\n  emulate() {\n    this.onsubmit(null, true).then((response: any) => {\n      switch (response.data.attributes.status) {\n        case 'old_to_new_move':\n          this.alertAttrs = { type: 'error', content: app.translator.trans('sycho-move-posts.forum.modal.status.old_to_new_move') };\n          break;\n\n        case 'simple_move':\n          this.alertAttrs = { type: 'success', content: app.translator.trans('sycho-move-posts.forum.modal.status.simple_move') };\n          break;\n\n        case 'complex_move':\n          this.alertAttrs = { type: 'warning', content: app.translator.trans('sycho-move-posts.forum.modal.status.complex_move') };\n          break;\n\n        default:\n          break;\n      }\n\n      m.redraw();\n    });\n  }\n\n  onsubmit(e: any, emulate: boolean) {\n    if (e) e.preventDefault();\n\n    this.isLoading = emulate ? 'check' : 'submit';\n    let url = '/api/posts/move';\n\n    if (emulate) url += '/check';\n\n    return app\n      .request({\n        method: 'POST',\n        url: `${app.forum.attribute('baseUrl')}${url}`,\n        body: { data: this.data() },\n        errorHandler: (e: any) => {\n          const error = e.response.errors[0];\n          this.isLoading = false;\n\n          if (error.code !== 'move_old_post_to_newer_discussion') {\n            throw e;\n          }\n\n          this.alertAttrs = {\n            type: 'error',\n            content: app.translator.trans('sycho-move-posts.forum.error.move_old_post_to_newer_discussion'),\n          };\n\n          m.redraw();\n        },\n      })\n      .then((response: any) => {\n        this.isLoading = false;\n        if (!emulate) {\n          m.redraw();\n          window.location.reload();\n          app.modal.close();\n\n          app.alerts.show(\n            {\n              type: 'success',\n            },\n            app.translator.trans('sycho-move-posts.forum.alerts.success')\n          );\n        }\n\n        return response;\n      });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/EventPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","import EventPost from 'flarum/forum/components/EventPost';\nimport Link from 'flarum/common/components/Link';\n\nexport default class PostMovedPost extends EventPost {\n  icon() {\n    return 'fas fa-exchange-alt';\n  }\n\n  descriptionKey() {\n    return 'sycho-move-posts.forum.post_stream.post_moved';\n  }\n\n  descriptionData() {\n    const post = this.attrs.post;\n    const data: any = post.content();\n\n    return {\n      target_discussion: (\n        <Link className=\"EventPost-PostMoved-target\" href={app.route('discussion.near', { id: data.targetDiscussionId, near: data.number })}>\n          {data.targetDiscussionTitle}\n        </Link>\n      ),\n      count: data.count,\n    };\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","import Notification from 'flarum/forum/components/Notification';\nimport { truncate } from 'flarum/common/utils/string';\n\nexport default class PostMovedNotification extends Notification {\n  icon() {\n    return 'fas fa-exchange-alt';\n  }\n\n  href() {\n    return app.route('discussion', { id: this.attrs.notification.content().targetDiscussionId });\n  }\n\n  content() {\n    return app.translator.trans('sycho-move-posts.forum.notifications.post_moved_text', {\n      targetDiscussionTitle: (\n        <span className=\"MovePosts-Notification-targetDiscussion\">{this.attrs.notification.content().targetDiscussionTitle}</span>\n      ),\n    });\n  }\n}\n","import { extend, override } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport Badge from 'flarum/common/components/Badge';\nimport Post from 'flarum/forum/components/Post';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport PostControls from 'flarum/forum/utils/PostControls';\nimport icon from 'flarum/common/helpers/icon';\nimport Discussion from 'flarum/common/models/Discussion';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Model from 'flarum/common/Model';\n\nimport DiscussionPageState from './states/DiscussionPageState';\nimport MovePostsModal from './components/MovePostsModal';\nimport PostMovedPost from './components/PostMovedPost';\nimport PostMovedNotification from './components/PostMovedNotification';\n\napp.initializers.add('glowingblue-move-posts', () => {\n  // @ts-ignore\n  Discussion.prototype.isFirstMoved = Model.attribute('isFirstMoved');\n\n  extend(Discussion.prototype, 'badges', function (badges: ItemList) {\n    if (this.isFirstMoved()) {\n      badges.add(\n        'firstMoved',\n        <Badge type=\"firstPostMoved\" label={app.translator.trans('sycho-move-posts.forum.badge.first_moved_tooltip')} icon=\"fas fa-exchange-alt\" />,\n        -20\n      );\n    }\n  });\n\n  // @ts-ignore\n  app.postComponents.postMoved = PostMovedPost;\n\n  // @ts-ignore\n  app.notificationComponents.postMoved = PostMovedNotification;\n\n  if (!app.data.resources[0].attributes.canMovePosts) {\n    return;\n  }\n\n  const state = new DiscussionPageState();\n\n  extend(CommentPost.prototype, 'oninit', function () {\n    this.subtree.check(() => state.selectedPostsToMove());\n  });\n\n  extend(Post.prototype, 'classes', function (classes: string[]) {\n    if (this.attrs.post.contentType() === 'comment' && state.has(this.attrs.post.id())) {\n      classes.push('Post--moving');\n    }\n  });\n\n  extend(CommentPost.prototype, 'headerItems', function (items) {\n    if (state.has(this.attrs.post.id())) {\n      items.add(\n        'moving',\n        <span className=\"PostMoving\">\n          {icon('fas fa-exchange-alt')} {app.translator.trans('sycho-move-posts.forum.post.moving')}\n        </span>\n      );\n    }\n  });\n\n  extend(DiscussionPage.prototype, 'oncreate', () => {\n    state.selectedPostsToMove([]);\n  });\n\n  extend(DiscussionPage.prototype, 'sidebarItems', function (items) {\n    if (state.selectedPostsToMove().length) {\n      items.add(\n        'movePosts',\n        <Button\n          icon=\"fas fa-exchange-alt\"\n          className=\"Button\"\n          onclick={() =>\n            app.modal.show(MovePostsModal, {\n              postIds: state.selectedPostsToMove(),\n              discussion: this.discussion,\n            })\n          }\n        >\n          {app.translator.trans('sycho-move-posts.forum.discussion.move_posts')}\n          <span className=\"MovePosts-Button-count\">{state.selectedPostsToMove().length}</span>\n        </Button>\n      );\n    }\n  });\n\n  extend(PostControls, 'moderationControls', function (items, post) {\n    if (post.contentType() !== 'comment') return;\n\n    const operation = state.has(post.id()) ? 'unmove' : 'move';\n\n    items.add(\n      'movePost',\n      <Button\n        icon=\"fas fa-arrow-right\"\n        onclick={() => {\n          if (operation === 'move') {\n            state.push(post.id());\n          } else {\n            state.remove(post.id());\n          }\n\n          m.redraw();\n        }}\n      >\n        {app.translator.trans(`sycho-move-posts.forum.post.${operation}`)}\n      </Button>\n    );\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","DiscussionPageState","selectedPostsToMove","this","Stream","_proto","push","postId","concat","remove","filter","id","has","includes","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","_inheritsLoose","create","constructor","MovePostsModal","_Modal","_this","_len","arguments","length","args","Array","_key","apply","isLoading","newDiscussion","newDiscussionTitle","targetDiscussionId","search","GlobalSearchState","className","title","app","trans","content","_this2","m","onsubmit","count","attrs","postIds","readonly","value","join","Switch","state","onchange","for","required","oninput","target","DiscussionSearch","ignore","discussion","onSelect","Button","type","loading","disabled","onclick","emulate","data","sourceDiscussionId","_this3","then","response","attributes","status","alertAttrs","redraw","_this4","preventDefault","url","method","attribute","body","errorHandler","error","errors","code","window","location","reload","close","show","Modal","PostMovedPost","_EventPost","icon","descriptionKey","descriptionData","post","target_discussion","Link","href","route","near","number","targetDiscussionTitle","EventPost","PostMovedNotification","_Notification","notification","translator","Notification","add","Discussion","isFirstMoved","Model","extend","badges","Badge","label","postMoved","resources","canMovePosts","CommentPost","subtree","check","Post","classes","contentType","items","DiscussionPage","PostControls","operation"],"sourceRoot":""}